/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * All Out War 2 class and item definitions
 * Credit to VoltlocK for originally creating the engine
 * With modifications by the Omega Team
 *
 * You may use portions of this script in your project as long as you give
 * credit where credit is due. Please don't be lame and just copy-paste any
 * of this and call it your own. Thanks!
 */

/*================
 *    ITEMS
 * ===============
 *
 * Table of various weapons and items by identifier.
 *
 * Pass an identifier to GiveItem to give the player the item
 * desired.
 *
 * Weapons must be defined here in order to be able to be given
 * to classes or to be able to be sold.
 *
 * Identifier constant chain MUST be in the same
 * order as the actual array.
 *
 * Keys:
 *	- nice name
 *	- item name 1
 *	- item name 2
 *	- item name 3
 *	- item count 1
 *	- item count 2
 *	- item count 3
 *	- credit value (0 = unsellable)
 *
 * To add a new item:
 *	1. add a constant for it at the end of the list.
 *	2. bump MAX_ITEMS at the end of the list, it must be equal to the amount of items.
 *	3. add an entry to Items[][] at the end for it
 */

// BEGIN ITEM DEFINITION TABLE
int Items[MAX_ITEMS][MAX_ITEMKEYS];

function void AddItem(int id, str name, str item0, str item1, str item2, int count0, int count1, int count2, int value)
{
    Items[id][IK_NAME] = name;
    Items[id][IK_ITEM0] = item0;
    Items[id][IK_ITEM1] = item1;
    Items[id][IK_ITEM2] = item2;
    Items[id][IK_COUNT0] = count0;
    Items[id][IK_COUNT1] = count1;
    Items[id][IK_COUNT2] = count2;
    Items[id][IK_VALUE] = value;
}

#define RESEARCH_ENHANCEDREFINING 0
#define RESEARCH_ADVANCEDMECHS 1
#define RESEARCH_HEALTHREGEN 2
#define RESEARCH_AMMOREGEN 3
#define RESEARCH_C4 4
#define RESEARCH_REPAIRUPGRADE 5
#define RESEARCH_ADVTURRETS 6
#define RESEARCH_MORETURRETS 7
#define RESEARCH_FRAGNADE 8
// ----
#define NUM_RESEARCHES 9
int Researches[NUM_RESEARCHES][NUM_RESEARCH_KEYS] = {
	/* {
		name, cost, category,
		description
	}*/
	
	{
		"Enhanced Refining", 2000, RC_CAT_UPGRADE,
		"New technology gets more purity\n
		out of refining Tiberium.\n
		\n
		\t--- Increases Harvesting income by $150\n"
	}, {
		"Advanced Mechs", 2000, RC_CAT_UPGRADE,
		"New Mech chassis and hardened metal plating.\n
		\n
		\n
		\t--- Enables construction of larger Mechs.\n"
	}, {
		"Health Regenerator", 2250, RC_CAT_EXTENSION,
		"Implant advanced cell reproduction.\n
		\n
		\n
		\t--- Gives entire team +1 health/s regeneration.\n
		\t--- Builds a Regen. Health Cache behind the Research Centre.\n"
	}, {
		"Ammo Regenerator", 2250, RC_CAT_EXTENSION,
		"Issue mini-ammo dispensers.\n
		\n
		\n
		\t--- Gives entire team slow Ammo regeneration. Mechs Included.\n
		\t--- Builds an Ammo Regenerator behind the Research Centre.\n"
	}, {
		"+1 Timed C4", 200, RC_CAT_ADDON,
		"An extra C4 explosive.\n
		\n
		\n
		\t--- Lets you carry an additional timed C4 explosive.\n"
	}, {
		"Repair Gun Upgrade", 200, RC_CAT_ADDON,
		"Applies the latest nanotechnology enhancements to your\n
		repair gun, allowing it to repair faster.\n
		\n
		\t--- Lets you repair faster.\n"
	}, {
		"Advanced Turrets", 2000, RC_CAT_UPGRADE,
		"New turret tech has come in!\n
		\n
		\n
		\t--- Enables use of higher level turrets.\n"
	}, {
		"More Turrets", 2000, RC_CAT_UPGRADE,
		"More generators to power turrets.\n
		\n
		\n
		\t--- Increases turret cap by 5.\n"
	}, {
		"+1 Frag Grenade", 200, RC_CAT_ADDON,
		"Adds an extra frag grenade to your arsenal.\n
		\n
		\n
		\t--- Exactly what it says on the tin.\n"
	}
};

int Mechs[NUM_MECHS][NUM_MECH_KEYS] = {
	/*
		name, cost, morph,
		ammo, health, weight, flags
		description
	*/
	{
		"Orca", 900, "OrcaSwitch",
		"OrcaAmmoPackage", 1000, MECHWEIGHT_LIGHT, 0,
		"		A light VTOL armed with a machine gun and\n
		rockets. Designed against infantry but\n
		loses hard against heavier firepower.\n
		\n
		\n
		\n
		\n
		Weapons:\n
		\t- Machine Gun\n
		\t- Rocket pods"
	}, {
		"Raven", 1200, "RavenSwitch",
		"RavenAmmoPackage", 2000, MECHWEIGHT_LIGHT, 0,
		"		A light and \cdFAST\c- land mech, designed\n
		for scouting and fending off infantry.\n
		Reports also indicate harvesters using\n
		Ravens for a safer harvesting trip.\n
		These mechs can also be built by\n
		Utility Guys.\n
		\n
		Weapons:\n
		\t- AC-2\n
		\t- LRM-5"
	}, {
		"Wolverine", 1250, "WolverineSwitch",
		"WolverineAmmoPackage", 3000, MECHWEIGHT_MEDIUM, 0,
		"		A medium, heavier mechs packed with\n
		heavier anti-infantry firepower at\n
		the cost of speed. These mechs can\n
		also be built by Utility Guys.\n
		\n
		\n
		\n
		Weapons:\n
		\t- LRM-10\n
		\t- Pulse Cannon\n
		\t- Minigun"
	}, {
		"Mad Cat", 1750, "MadCatSwitch",
		"MadCatAmmoPackage", 4000, MECHWEIGHT_HEAVY, MF_POWER,
		"		A heavy all-around mech designed to hold\n
		its own against both infantry and mechs\n
		and can also hit on buildings. Though,\n
		its slow speed and its massive chassis\n
		make it a vulnerable target, especially\n
		at long range.\n
		\n
		Weapons:\n
		\t- 2x Shock Cannon\n
		\t- 2x Shock Rifle\n
		\t- LRM-20"
	}, {
		"Titan", 2000, "TitanSwitch",
		"TitanAmmoPackage", 5000, MECHWEIGHT_HEAVY, MF_POWER,
		"		A very heavy mech designed for total\n
		annihilation of buildings, though it\n
		performs less good at infantry than\n
		the Mad Cat. However, the 100mm cannon\n
		has proven its use time and time\n
		again...\n
		\n
		Weapons:\n
		\t- 100mm Cannon\n
		\t- 2x Flamer\n
		\t- LRM-20"
	}, {
		"Juggernaut MKII", 3000, "JuggernautSwitch",
		"JuggernautAmmoPackage", 5000, MECHWEIGHT_HEAVY, MF_POWER,
		"		Extremely heavy anti-armor walker\n
		This metal-tearing grinder turns mechs\n
		to metal bits before they can even spell\n
		its name. It is also effective on buildings.\n
		However, its slow speed and anti-armor\n
		weapons make it a sitting duck for infantry.\n
		\n
		\n
		Weapons:\n
		\t- 2x Artillery Cannon 80mm\n
		\t- 2x Anti-Mech SRM-15\n
		\t- 2x Flak Cannon\n
		\t- Mini-Nuke Artillery"
	}, {
		"Tortoise", 1250, "TortoiseSwitch",
		"TortoiseAmmoPackage", 3500, MECHWEIGHT_MEDIUM, 0,
		"		An armoured personnel carrier, the\n
		Tortoise doesn't sport a powerful engine\n
		or an impressive arsenal. Instead, it has\n
		tough armor rivaling that of the Mad Cat\n
		and the ability to \ckcarry up to five\n
		\ckinfantry passengers\c- make it a rather\n
		tactical unit.\n
		Weapons:\n
		\t- Plasma Rifle"
	}
};

/*============================================================================
 *
 *                       C L A S S E S
 *
 * ============================================================================
 *
 * List of classes and their definitions. Pass an
 * identifier to PurchaseClass() / SetClass() to
 * set a class to the player.
 *
 * Identifier constant chain MUST be in the same
 * order as the actual class array.
 *
 * The class array is where the classes are actually
 * defined in. Changes in here result in changes to class
 * specs. New classes must use existing format and template.
 *
 * Array keys:
 *	row 1:
 *	- display name
 *	- price (0 for free)
 *	- speed (fixed point)
 *	- dependency (constant)
 *
 *	row 2:
 *	- armor grade (-1 - 5)
 *	- armor modifier (ARMOD_NOCHANGE, ARMOD_BULLET, ARMOD_EXPLO, ARMOD_ENERGY, ARMOD_CHEM, ARMOD_FIRE)
 *
 *	row 3:
 *	- frag grenades
 *	- timed C4 count
 *	- enhanced timed C4 (true/false)
 *	- flags
 *		- CF_NoPistol (no handgun)
 *		- CF_IsHarvester (is a harvester)
 *		- CF_IsSniper (has powered-up sniper)
 *		- CF_IsStealth (is a stealth class)
 *		- CF_Warning (warning printed on purchase)
 *		- CF_CantPilot (cannot use mechs)
 *		- CF_IsMedic (gets medic regeneration)
 *		- CF_IsTimeCop (counts as a timecop for limit)
 *		- CF_Support (class is listed as a support class in the menu)
 *		- CF_DamageDebuff (class does less damage than others)
 *
 *	row 4:
 *	- item 1 | primary weapon
 *	- item 2 |
 *	- item 3 |
 *	- item 4 |
 *	- item 5 |
 *	- item 6 |
 */

function void InitClasses (void) {
    int i = 0;
    
	/* AddClass (token, "Name of class", cost, speed, dependency,
		armor, armor_mod, frags, c4, enhanced, flags,
		item0, item1, item2, item3, item4, item5);
	*/
	
	AddClass (CLASS_Gunman, "Gunman", 0, 1.0, DEP_NONE,
		0, ARMOD_NOCHANGE,
		1, 1, false, 0,
		ITEM_SMG, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_Engineer, "Engineer", 0, 0.8, DEP_NONE,
		0, ARMOD_NOCHANGE,
		1, 1, true, CF_Support,
		ITEM_REPAIR, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_Minigunner, "Minigunner", 400, 0.7, DEP_NONE,
		1, ARMOD_BULLET,
		2, 1, false, 0,
		ITEM_GATLING, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_Technician, "Technician", 250, 0.8, DEP_NONE,
		1, ARMOD_NOCHANGE,
		2, 2, true, CF_Support,
		ITEM_ADVREPAIR, ITEM_SMG, ITEM_MINE_X4, 0, 0, 0);
	
	AddClass (CLASS_Flamer, "Flamer", 450, 0.7, DEP_NONE,
		1, ARMOD_FIRE,
		2, 1, false, 0,
		ITEM_FLAMER, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_Rifleman, "Rifleman", 200, 0.9, DEP_NONE,
		1, ARMOD_NOCHANGE,
		2, 1, false, 0,
		ITEM_RIFLE, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_MachineGunner, "Machine Gunner", 300, 0.9, DEP_NONE,
		1, ARMOD_BULLET,
		2, 1, false, 0,
		ITEM_MACHINEGUN, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_Grenadier, "Grenadier", 450, 0.8, DEP_NONE,
		2, ARMOD_EXPLO,
		4, 2, true, 0,
		ITEM_GRENADE, ITEM_RIFLE, 0, 0, 0, 0);
	
	AddClass (CLASS_Rocketeer, "Rocket Soldier", 500, 0.7, DEP_BARRACKS,
		2, ARMOD_EXPLO,
		2, 2, false, 0,
		ITEM_MISSILE, ITEM_RIFLE, 0, 0, 0, 0);
	
	AddClass (CLASS_StealthTrooper, "Stealth Trooper", 600, 0.85, DEP_NONE,
		-1, ARMOD_ENERGY,
		2, 2, false, CF_IsStealth,
		ITEM_STEALTH, ITEM_KNIFE, 0, 0, 0, 0);
	
	AddClass (CLASS_GaussGunner, "Gauss Gunner", 600, 0.8, DEP_BARRACKS,
		2, ARMOD_ENERGY,
		2, 1, false, 0,
		ITEM_GAUSS, ITEM_RIFLE, 0, 0, 0, 0);
	
	AddClass (CLASS_ChemWarrior, "Chem Warrior", 550, 0.7, DEP_BARRACKS,
		2, ARMOD_CHEM,
		2, 1, false, 0,
		ITEM_CHEMSPRAY, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_ShockTrooper, "Shock Trooper", 600, 0.7, DEP_CENTRE,
		1, ARMOD_ENERGY,
		2, 1, false, 0,
		ITEM_SHOCKRIFLE, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_Commando, "Commando", 1000, 0.85, DEP_CENTRE,
		0, ARMOD_NOCHANGE,
		4, 2, true, CF_Warning|CF_CantPilot,
		ITEM_GAUSS, ITEM_MISSILE, ITEM_GATLING, ITEM_RIFLE, 0, 0);
	
	AddClass (CLASS_Shotgunner, "Shotgunner", 0, 0.9, DEP_NONE,
		1, ARMOD_NOCHANGE,
		1, 1, false, 0,
		ITEM_SHOTGUN, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_SuicideBomber, "Suicide Bomber", 1750, 1.0, DEP_NONE,
		0, ARMOD_NOCHANGE,
		0, 0, false, (CF_NoPistol | CF_CantPilot | CF_Warning | CF_Support),
		ITEM_BOMBPACK, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_Sniper, "Sniper", 750, 0.675, DEP_CENTRE,
		1, ARMOD_NOCHANGE,
		2, 1, false, CF_IsSniper,
		ITEM_SNIPER, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_UtilityGuy, "Utility Guy", 650, 0.75, DEP_NONE,
		2, ARMOD_NOCHANGE,
		1, 1, true, CF_CantPilot|CF_Support,
		ITEM_UTILITY, ITEM_REPAIR, ITEM_DECON, 0, 0, 0);
	
	AddClass (CLASS_DemoExpert, "Demolitions Expert", 550, 0.75, DEP_NONE,
		2, ARMOD_EXPLO,
		4, 4, true, (CF_CantPilot | CF_Support),
		ITEM_BOMBSQUAD, ITEM_SHOTGUN, ITEM_REMOTEC4, ITEM_MINE_X6, 0, 0);
	
	AddClass (CLASS_FieldMedic, "Field Medic", 300, 0.85, DEP_NONE,
		2, ARMOD_CHEM,
		2, 1, false, (CF_IsMedic | CF_Support | CF_DamageDebuff),
		ITEM_HEALGUN, ITEM_TIBRIFLEWEAK, ITEM_MEDFIELD, 0, 0, 0);
	
	AddClass (CLASS_LaserChaingunner, "Laser Chaingunner", 650, 0.75, DEP_CENTRE,
		2, ARMOD_ENERGY,
		2, 1, false, 0,
		ITEM_LASERCHAIN, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_JetTrooper, "Jet Trooper", 600, 0.65, DEP_BARRACKS,
		2, ARMOD_BULLET,
		2, 1, false, 0,
		ITEM_MACHINEGUN, ITEM_RIFLE, ITEM_JETPACK, 0, 0, 0);
	
	AddClass (CLASS_TiberiumAutorifleman, "Tiberium Autorifleman", 400, 0.8, DEP_NONE,
		1, ARMOD_CHEM,
		2, 1, false, 0,
		ITEM_TIBRIFLE, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_DoubleShotgunner, "Double Shotgunner", 200, 0.8, DEP_NONE,
		1, ARMOD_NOCHANGE,
		1, 1, false, 0,
		ITEM_SSG, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_PlasmaGunner, "Plasma Gunner", 600, 0.8, DEP_CENTRE,
		2, ARMOD_ENERGY,
		2, 1, true, 0,
		ITEM_PLASMA, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_Artillery, "Artillery Soldier", 600, 0.7, DEP_BARRACKS,
		2, ARMOD_EXPLO,
		2, 1, true, 0,
		ITEM_ARTILLERY, ITEM_RIFLE, 0, 0, 0, 0);
	
	AddClass (CLASS_TimeCop, "Time Cop", 2000, 0.9, DEP_CENTRE,
		2, ARMOD_NOCHANGE,
		4, 2, true, (CF_Warning | CF_CantPilot | CF_Support),
		ITEM_TIMEGUN, ITEM_MACHINEGUN, 0, 0, 0, 0);
	
	AddClass (CLASS_AdvHarvester, "Advanced Harvester", 450, 0.8, DEP_REFINERY,
		1, ARMOD_CHEM,
		2, 1, false, (CF_IsHarvester | CF_CantPilot | CF_Support),
		ITEM_TIBRIFLEWEAK, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_Harvester, "Tiberium Harvester", 0, 0.65, DEP_REFINERY,
		0, ARMOD_CHEM,
		1, 1, false, (CF_IsHarvester | CF_Support | CF_DamageDebuff),
		ITEM_SMG, 0, 0, 0, 0, 0);
	
	AddClass (CLASS_CombustionGunner, "Combustion Gunner", 400, 0.8, DEP_BARRACKS,
		1, ARMOD_FIRE,
		2, 1, false, 0,
		ITEM_COMBUSTRIFLE, 0, 0, 0, 0, 0);
        
    AddItem(ITEM_None, "", "", "", "", 0, 0, 0, 0); // Mandatory empty entry for no item
	AddItem(ITEM_Handgun, "Handgun", "Handgun", "NewClipAmmo", "", 1, 400, 0, 5);
	AddItem(ITEM_SMG, "Sub-Machine Gun", "SubMachineGun", "NewClipAmmo", "", 1, 400, 0, 25);
	AddItem(ITEM_Shotgun, "Shotgun", "Boomstick", "ShotgunAmmo", "", 1, 50, 0, 25);
	AddItem(ITEM_SSG, "Double Shotgun", "DoubleShotgun", "ShotgunAmmo", "", 1, 50, 0, 50);
	AddItem(ITEM_Machinegun, "Machine Gun", "MachineGun", "MachineGunAmmo", "", 1, 400, 0, 25);
	AddItem(ITEM_Gatling, "Gatling Gun", "GatlingGun", "MachineGunAmmo", "", 1, 400, 0, 100);
	AddItem(ITEM_Rifle, "Rifle", "Rifle", "RifleAmmo", "RifleGrenadeAmmo", 1, 30, 4, 25);
	AddItem(ITEM_Gauss, "Gauss Rifle", "GaussRifle",  "GaussRifleAmmo", "", 1, 50, 0, 150);
	AddItem(ITEM_Grenade, "Grenade Launcher", "AowGrenadeLauncher", "GrenadeAmmo", "", 1, 40, 0, 125);
	AddItem(ITEM_Stealth, "Stealth Laser Rifle", "StealthLaserRifle", "LaserRifleAmmo", "StealthCharge", 1, 200, 100, 0);
    
	AddItem(ITEM_LaserRifle, "Laser Rifle", "LaserRifle", "LaserRifleAmmo", "", 1, 200, 0, 25);
	AddItem(ITEM_TimeGun, "Time Gun", "TimeGun", "TimeGunAmmo", "", 1, 175, 0, 0);
	AddItem(ITEM_Artillery, "Artillery Cannon", "ArtilleryCannon", "ArtilleryShellAmmo", "", 1, 40, 0, 125);
	AddItem(ITEM_LaserChain, "Laser Chaingun", "LaserChaingun", "LaserChaingunAmmo", "", 1, 400, 0, 175);
	AddItem(ITEM_Utility, "Utility Gun", "UtilityGun", "", "", 1, 0, 0, 0);
	AddItem(ITEM_PlasmaCannon, "Plasma Cannon", "PlasmaCannon", "PlasmaCannonAmmo", "", 1, 10, 0, 500);
	AddItem(ITEM_ChemSpray, "Chemical Sprayer", "ChemicalSprayer", "ChemicalAmmo", "ChemicalGrenadeAmmo", 1, 200, 4, 125);
	AddItem(ITEM_TibRifle, "Tiberium Autorifle", "TiberiumAutorifle", "TE21CalAmmo", "", 1, 120, 0, 125);
	AddItem(ITEM_TibRifleWeak, "Tiberium Autorifle (weak)", "TiberiumAutorifleWeak", "TE21CalAmmo", "", 1, 120, 0, 75);
	AddItem(ITEM_AdvRepair, "Upgraded Repair Gun", "RepairGun", "RepairGunUpgrade", "", 1, 1, 0, 0);
    
	AddItem(ITEM_Repair, "Repair Gun", "RepairGun", "", "", 1, 0, 0, 0);
	AddItem(ITEM_Decon, "Deconstruction Gun", "RemoverGun", "", "", 1, 0, 0, 0);
	AddItem(ITEM_Decon, "Bomb-Squad Gun", "BombSquadGun", "", "", 1, 0, 0, 0);
	AddItem(ITEM_HealGun, "Heal Gun", "HealGun", "", "", 1, 0, 0, 0);
	AddItem(ITEM_Missile, "Missile Launcher", "MissileLauncher", "MissileAmmo", "", 1, 15, 0, 125);
	AddItem(ITEM_Flamer, "Flamethrower", "Flamer", "FlamerAmmo", "PhosphorusGrenadeAmmo", 1, 400, 4, 125);
	AddItem(ITEM_ShockRifle, "Shock Rifle", "ShockRifle", "GeneporiumCharge", "", 1, 200, 0, 150);
	AddItem(ITEM_Sniper, "Sniper Rifle", "SniperRifle", "SniperAmmo", "", 1, 40, 0, 125);
	AddItem(ITEM_Plasma, "Plasma Rifle", "PlasmaGun", "PlasmaRifleAmmo", "", 1, 200, 0, 200);
	AddItem(ITEM_Knife, "Stealth Knife", "Knife", "StealthCharge", "", 1, 100, 0, 0);
	AddItem(ITEM_Chainsaw, "Chainsaw", "EagerBeaver", "", "", 1, 0, 0, 125);
    
	AddItem(ITEM_BombPack, "Bomb Pack", "BombPack", "", "", 1, 0, 0, 0);
	AddItem(ITEM_RemoteC4, "Remote C4", "RemoteC4", "RemoteC4Ammo", "", 1, 4, 0, 75);
	AddItem(ITEM_Jetpack, "Jetpack", "Jetpack", "JetpackFuel", "", 1, 40, 0, 0);
	AddItem(ITEM_Mine_x4, "Mines (x4)", "ProxyMine", "ProxyMineCount", "", 4, 4, 0, 0);
	AddItem(ITEM_Mine_x6, "Mines (x6)", "ProxyMine", "ProxyMineCount", "", 6, 6, 0, 0);
	AddItem(ITEM_MedField, "Medication Field", "MedicationFieldItem", "MedicationFieldCount", "", 1, 1, 0, 0);
	AddItem(ITEM_ArmorUp, "+1 Armor Upgrade", "HasArmorUpgrade", "ArmorUpgrade", "CantMech", 1, 1, 1, 0);
	AddItem(ITEM_Beacon, "Superweapon Beacon", "BeaconItem", "", "", 1, 0, 0, 0);
	AddItem(ITEM_CombustRifle, "Combustion Autorifle", "CombustionAutorifle", "FA21CalAmmo", "", 1, 120, 0, 125);
	AddItem(ITEM_CombustRifleWeak, "Combustion Autorifle (weak)", "CombustionAutorifleWeak", "FA21CalAmmo", "", 1, 120, 0, 75);
	AddItem(ITEM_SniperRifleWeak, "Sniper Rifle (weak)", "SniperRifleWeak", "SniperAmmo", "", 1, 40, 0, 125);
    
    AddAddon(i++, "+1 Armor", 250, ITEM_ArmorUp);
	AddAddon(i++, "Tiberium Autorifle", 300, ITEM_TibRifleWeak);
	AddAddon(i++, "Combustion Autorifle", 300, ITEM_CombustRifleWeak);
	AddAddon(i++, "Artillery Cannon", 550, ITEM_Artillery);
	AddAddon(i++, "Chainsaw", 250, ITEM_Chainsaw);
	AddAddon(i++, "Plasma Cannon", 1500, ITEM_PlasmaCannon);
	AddAddon(i++, "Superweapon Beacon", 1750, ITEM_Beacon);
        
    // For some reason, mech and research ints get broken, so we have to define them here
    // Research upgrades
    Researches[RESEARCH_ADVANCEDMECHS][RCK_CATEGORY] = RC_CAT_UPGRADE;
    Researches[RESEARCH_ADVANCEDMECHS][RCK_COST] = 2000;
    
    Researches[RESEARCH_ENHANCEDREFINING][RCK_CATEGORY] = RC_CAT_UPGRADE;
    Researches[RESEARCH_ENHANCEDREFINING][RCK_COST] = 2000;
    
    Researches[RESEARCH_ADVTURRETS][RCK_CATEGORY] = RC_CAT_UPGRADE;
    Researches[RESEARCH_ADVTURRETS][RCK_COST] = 2000;
    
    Researches[RESEARCH_MORETURRETS][RCK_CATEGORY] = RC_CAT_UPGRADE;
    Researches[RESEARCH_MORETURRETS][RCK_COST] = 2000;
    
    // Research extensions
    Researches[RESEARCH_HEALTHREGEN][RCK_CATEGORY] = RC_CAT_EXTENSION;
    Researches[RESEARCH_HEALTHREGEN][RCK_COST] = 2250;
    
    Researches[RESEARCH_AMMOREGEN][RCK_CATEGORY] = RC_CAT_EXTENSION;
    Researches[RESEARCH_AMMOREGEN][RCK_COST] = 2250;
    
    // Research addons
    Researches[RESEARCH_C4][RCK_CATEGORY] = RC_CAT_ADDON;
    Researches[RESEARCH_C4][RCK_COST] = 200;
    
    Researches[RESEARCH_REPAIRUPGRADE][RCK_CATEGORY] = RC_CAT_ADDON;
    Researches[RESEARCH_REPAIRUPGRADE][RCK_COST] = 200;
    
    Researches[RESEARCH_FRAGNADE][RCK_CATEGORY] = RC_CAT_ADDON;
    Researches[RESEARCH_FRAGNADE][RCK_COST] = 200;
    
    // Mechs light
    Mechs[MECH_ORCA][MK_COST] = 900;
    Mechs[MECH_ORCA][MK_HEALTH] = 1000;
    Mechs[MECH_ORCA][MK_WEIGHT] = MECHWEIGHT_LIGHT;
    Mechs[MECH_ORCA][MK_FLAGS] = 0;
    
    Mechs[MECH_RAVEN][MK_COST] = 1200;
    Mechs[MECH_RAVEN][MK_HEALTH] = 2000;
    Mechs[MECH_RAVEN][MK_WEIGHT] = MECHWEIGHT_LIGHT;
    Mechs[MECH_RAVEN][MK_FLAGS] = 0;
    
    Mechs[MECH_WOLVERINE][MK_COST] = 1250;
    Mechs[MECH_WOLVERINE][MK_HEALTH] = 3000;
    Mechs[MECH_WOLVERINE][MK_WEIGHT] = MECHWEIGHT_MEDIUM;
    Mechs[MECH_WOLVERINE][MK_FLAGS] = 0;
    
    Mechs[MECH_MADCAT][MK_COST] = 1750;
    Mechs[MECH_MADCAT][MK_HEALTH] = 4000;
    Mechs[MECH_MADCAT][MK_WEIGHT] = MECHWEIGHT_HEAVY;
    Mechs[MECH_MADCAT][MK_FLAGS] = MF_POWER;
    
    Mechs[MECH_TITAN][MK_COST] = 2000;
    Mechs[MECH_TITAN][MK_HEALTH] = 5000;
    Mechs[MECH_TITAN][MK_WEIGHT] = MECHWEIGHT_HEAVY;
    Mechs[MECH_TITAN][MK_FLAGS] = MF_POWER;
    
    Mechs[MECH_JUGGERNAUT][MK_COST] = 3000;
    Mechs[MECH_JUGGERNAUT][MK_HEALTH] = 5000;
    Mechs[MECH_JUGGERNAUT][MK_WEIGHT] = MECHWEIGHT_HEAVY;
    Mechs[MECH_JUGGERNAUT][MK_FLAGS] = MF_POWER;
    
    Mechs[MECH_Tortoise][MK_COST] = 1200;
    Mechs[MECH_Tortoise][MK_HEALTH] = 2000;
    Mechs[MECH_Tortoise][MK_WEIGHT] = MECHWEIGHT_MEDIUM;
    Mechs[MECH_Tortoise][MK_FLAGS] = 0;
}